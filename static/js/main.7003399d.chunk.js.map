{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","none","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","sortMethod","resultGoods","alphabet","sort","a","b","localeCompare","length","sortBy","visibleGoods","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,SAAAA,M,KAML,IAiBaE,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,MAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EArBO,SAACC,EAAiBC,GAC/B,IAAMC,EAAW,YAAOF,GAExB,OAAQC,GACN,KAAKX,EAASa,SAGZ,OAFAD,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAEpCJ,EACT,KAAKZ,EAASkB,OAGZ,OAFAN,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAEjCN,EACT,QACE,OAAOA,GAQSO,CAAOlB,EAAiBI,GACtCe,EAAeb,EAAaE,EAAYY,UAAYZ,EAE1D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYnB,IAAcL,EAASa,WACvCY,QAAS,kBAAMnB,EAAaN,EAASa,WAJvC,iCASA,wBACEU,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYnB,IAAcL,EAASkB,SACvCO,QAAS,kBAAMnB,EAAaN,EAASkB,SAJvC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAajB,IACjBkB,QAAS,kBAAMjB,GAAeD,IAJhC,sBASEF,GAAaE,IAEb,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPnB,EAAaN,EAASI,MACtBI,GAAc,IALlB,sBAaJ,6BACGY,EAAaM,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC5FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7003399d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  none = '',\n}\n\nconst sortBy = (goods: string[], sortMethod: SortType) => {\n  const resultGoods = [...goods];\n\n  switch (sortMethod) {\n    case SortType.alphabet:\n      resultGoods.sort((a, b) => a.localeCompare(b));\n\n      return resultGoods;\n    case SortType.length:\n      resultGoods.sort((a, b) => a.length - b.length);\n\n      return resultGoods;\n    default:\n      return resultGoods;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.none);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = sortBy(goodsFromServer, sortField);\n  const visibleGoods = isReversed ? sortedGoods.reverse() : sortedGoods;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SortType.alphabet })}\n          onClick={() => setSortField(SortType.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SortType.length })}\n          onClick={() => setSortField(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortType.none);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}